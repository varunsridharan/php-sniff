<?xml version="1.0"?>

<ruleset name="VS-WordPress-PHP-Compatibility">
    <description>Apply PHP compatibility checks to WordPress Plugin files</description>

    <!-- Sets the minimum supported WP version to 4.7, which is over a year old. -->
    <config name="minimum_supported_wp_version" value="4.8"/>

    <rule ref="PHPCompatibilityWP"/>

    <!-- WordPress Core currently supports PHP 5.6+. -->
    <config name="testVersion" value="5.6-"/>

    <!-- Only scan PHP files. -->
    <arg name="extensions" value="php"/>

    <!-- Whenever possible, cache the scan results and re-use those for unchanged files on the next scan. -->
    <arg name="cache"/>

    <!-- Set the memory limit to 256M.
         For most standard PHP configurations, this means the memory limit will temporarily be raised.
         Ref: https://github.com/squizlabs/PHP_CodeSniffer/wiki/Advanced-Usage#specifying-phpini-settings
    -->
    <ini name="memory_limit" value="256M"/>

    <!-- Strip the filepaths down to the relevant bit. -->
    <arg name="basepath" value="./"/>

    <!-- Check up to 20 files simultaneously. -->
    <arg name="parallel" value="20"/>

    <!-- Show sniff codes in all reports. -->
    <arg value="ps"/>

    <!-- For now, only the files in src are scanned. -->
    <!--<file>./src/</file>-->
    <file>./</file>

    <exclude-pattern>*/phpunit.xml*</exclude-pattern>
    <exclude-pattern>*/languages/*</exclude-pattern>
    <exclude-pattern>*/tests/*</exclude-pattern>
    <exclude-pattern>*/bower-components/*</exclude-pattern>
    <exclude-pattern>*/node_modules/*</exclude-pattern>
    <exclude-pattern>*/vendor/*</exclude-pattern>
    <exclude-pattern>*/.github/*</exclude-pattern>
    <exclude-pattern>*\.(css|js)</exclude-pattern>

</ruleset>